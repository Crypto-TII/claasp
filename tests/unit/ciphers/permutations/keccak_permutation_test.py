from claasp.ciphers.permutations.keccak_permutation import KeccakPermutation


def test_keccak_permutation():
    keccak = KeccakPermutation()
    assert keccak.family_name == 'keccak'
    assert keccak.type == 'permutation'
    assert keccak.number_of_rounds == 24
    assert keccak.word_bit_size == 64
    assert keccak.id == 'keccak_p1600_o1600_r24'
    assert keccak.component_from(0, 0).id == 'xor_0_0'
    assert keccak.component_from(23, 0).id == 'xor_23_0'

    keccak = KeccakPermutation(number_of_rounds=4, word_size=64)
    assert keccak.number_of_rounds == 4
    assert keccak.id == 'keccak_p1600_o1600_r4'
    assert keccak.component_from(3, 0).id == 'xor_3_0'

    keccak = KeccakPermutation(number_of_rounds=1)
    plaintext = int('0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000', 16)
    ciphertext = int('0x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000'
                     '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                     '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                     '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                     '0000000000000000000000', 16)
    assert keccak.evaluate([plaintext]) == ciphertext

    keccak = KeccakPermutation(number_of_rounds=24)
    plaintext = int('0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                    '000000000000000000', 16)
    ciphertext = int('0xf1258f7940e1dde784d5ccf933c0478ad598261ea65aa9eebd1547306f80494d8b284e056253d057ff97a42d7f8e6'
                     'fd490fee5a0a44647c48c5bda0cd6192e76ad30a6f71b19059c30935ab7d08ffc64eb5aa93f2317d635a9a6e6260d71'
                     '210381a57c16dbcf555f43b831cd0347c82601f22f1a11a5569f05e5635a21d9ae6164befef28cc970f2613670957bc'
                     '46611b87c5a554fd00ecb8c3ee88a1ccf32c8940c7922ae3a26141841f924a2c509e416f53526e70465c275f644e97f'
                     '30a13beaf1ff7b5ceca249', 16)
    assert keccak.evaluate([plaintext]) == ciphertext
